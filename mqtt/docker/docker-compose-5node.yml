version: "3"
services:
  nginx:
    image: nginx:1.19.8-alpine
    ports:
      - "8088:80"
      - "1882:1883"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./nginx3/stream_conf.d/:/etc/nginx/stream_conf.d/
      - ./nginx3/nginx.conf:/etc/nginx/nginx.conf
    networks: 
      app_net:
        ipv4_address: 172.16.238.16

  init:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    ports:
    - "18831:1883"
    networks:
      app_net:
        ipv4_address: 172.16.238.10
  first:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
    - "DOCKER_VERNEMQ_DISCOVERY_NODE=172.16.238.10"
    ports:
    - "18832:1883"
    networks:
      app_net:
        ipv4_address: 172.16.238.11
  second:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
    - "DOCKER_VERNEMQ_DISCOVERY_NODE=172.16.238.10"
    ports:
    - "18833:1883"
    networks:
      app_net:
        ipv4_address: 172.16.238.12
  third:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
    - "DOCKER_VERNEMQ_DISCOVERY_NODE=172.16.238.10"
    ports:
    - "18834:1883"
    networks:
      app_net:
        ipv4_address: 172.16.238.13
  fourth:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
    - "DOCKER_VERNEMQ_DISCOVERY_NODE=172.16.238.10"
    ports:
    - "18835:1883"
    networks:
      app_net:
        ipv4_address: 172.16.238.14

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 172.16.238.0/24
